<?php

namespace App\Http\Controllers\Rid;

use App\Rid;
use App\Role;
use App\User;
use App\RidUser;
use App\Http\Controllers\Controller;
use App\Http\Requests\Rid\User\CreateRequest;
use App\Http\Requests\Rid\User\UpdateRequest;

/**
 * Class RidUserController
 * @package App\Http\Controllers\Rid
 *
 * @author Andrew Mellor <andrew@quasars.com>
 */
class RidUserController extends Controller
{

	public function inviteUser(CreateRequest $request)
	{

		$user = new User();
		$user->id = $this->newID(User::class);
		$user->password = \Hash::make($user->id);
		$user->email = $request->input('email');
		$user->first_name = $request->input('first_name');
		$user->last_name = $request->input('last_name');
		$user->role_id = $request->input('role_id');
		$user->type = 'Physician';
		$user->save();

		$ridUser = new RidUser();
		$ridUser->id = $this->newID(RidUser::class);
		$ridUser->rid_id = $request->input('rid_id');
		$ridUser->user_id = $user->id;
		$ridUser->role_id = 'inherited';
		// level find out //
		$role = Role::where('id', $request->input('role_id'))->first();
		$ridUser->level = json_encode(json_decode($role->base_level)->rid);
		$ridUser->save();

		return redirect()->back()->with("alerts", ['type' => 'success', 'msg' => 'Information Updated successfully']);
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @param  \Illuminate\Http\Request $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(CreateRequest $request)
	{

		$ridUser = new RidUser();
		$role = Role::where('id', $request->input('role_id'))->first();
		$user = User::where('id', $request->input('user_id'))->first();
		$ridUser->id = $this->newID(RidUser::class);
		$ridUser->rid_id = $request->input('rid_id');
		$ridUser->user_id = $user->id;
		$ridUser->role_id = $role->id;
		$ridUser->level = json_encode(json_decode($role->base_level)->rid);
		$ridUser->save();
		return redirect()->back()->with("alerts", ['type' => 'success', 'msg' => 'Information Updated successfully']);
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  \Illuminate\Http\Request $request
	 * @return \Illuminate\Http\Response
	 */
	public function update(UpdateRequest $request)
	{

		$ridUser = RidUser::find($request->id);

		if ($request->input('role_id')) {
			$role = Role::where('id', $request->input('role_id'))->first();
			$user = User::where('id', $ridUser->user_id)->first();
			$user->role_id = $request->input('role_id');
			$ridUser->level = json_encode(json_decode($role->base_level)->rid);
			// $ridUser->save();
			$user->save();

		} 

		if($request->level){
			$levelJSON = json_encode($request->level);
			$ridUser->level = str_replace('"on"', '"1"', $levelJSON);
		}

		$ridUser->save();
		return redirect()->back()->with("alerts", ['type' => 'success', 'msg' => 'Information Updated successfully']);
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id)
	{
		$ridUser = RidUser::where('id', $id)->first();
		$ridUser->delete();
		return redirect()->back()->with("alerts", ['type' => 'success', 'msg' => 'Information Deleted successfully']);
	}
}
